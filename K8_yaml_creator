#!/bin/bash

# Author: Jacob M
# Last edited on: 2/19/2024

# Kubernetes YAML creation tool for Namespace, Services, Pods, Roles, and Deployments.

# Clears and makes file
echo -n "" > K8.yaml

# Color functions
green='\e[32m'
red='\e[31m'
clear='\e[0m'

read -t 60 -p 'Input the kind of K8 YAML, ex: Deployment, Pod, Role, Namespace, Service:' kind
if [ ${kind} = Role ]; then
apiversion=rbac.authorization.k8s.io/
fi

if [ ${kind} = Deployment ]; then
apiversion=apps/
fi

if [ ${kind} != Deployment ] && [ ${kind} != Role ]; then
apiversion=''
fi

# Creates apiVersion based on what Kind you select
echo "apiVersion: ${apiversion}v1
kind: ${kind}" >> K8.yaml

cat K8.yaml
printf '\n%.0s' `seq 1 5`

read -t 60 -p 'Input the name under metadata:' name
cat K8.yaml
printf '\n%.0s' `seq 1 5`

echo "metadata:
  name: ${name}" >> K8.yaml

# If namespace then add dependencies
if [ ${kind} = Namespace ]; then
echo "  labels:
    name: ${name}" >> K8.yaml
printf '\n%.0s' `seq 1 2`
cat K8.yaml
printf '\n%.0s' `seq 1 5`
echo -e "${red}This is your final Namespace yaml." ${clear}
exit
else
microk8s kubectl get namespace
printf '\n%.0s' `seq 1 2`
read -t 60 -p 'Input the namespace under metadata:' namespace
echo "  namespace: ${namespace}" >> K8.yaml
cat K8.yaml
printf '\n%.0s' `seq 1 5`

fi



# q used inside an echo command with {"} is problematic so q is defined as {"} 
q='"'

# If role then add dependencies
if [ ${kind} = Role ]; then
set -f
read -t 60 -p 'Do you have an apiGroup ? leave blank if no:' apigroup
read -t 60 -p 'What are your resources ? ex. pods, nodes, deployments, services, crontabs, jobs, or *:' resources
read -t 60 -p 'What are your resourceNames ?' resourcenames
read -t 60 -p 'What are your verbs ? ex. get, list, watch, create, update, patch, delete, or *:' verb

# Sed command takes verbs specified and adds them to yaml in readable K8 format
verbs=$( echo $verb | sed -e 's/ /", "/g' )

# "\"" and ${q} do the same thing, add qutoes inside a echo command
echo "rules:
- apiGroups: [ "\""${apigroup}"\"" ]
  resources: [ "\""${resources}"\"" ]
  resourceNames: [ "\""${resourcenames}"\"" ]
  verbs: [ ${q}${verbs}${q} ]" >> K8.yaml
set +f
printf '\n%.0s' `seq 1 2`
cat K8.yaml
printf '\n%.0s' `seq 1 5`
echo -e "${red}This is your final Role yaml."${clear}
fi


# If service then add dependencies
if [ ${kind} = Service ]; then
read -t 60 -p 'How many ports do you want open ? ex. 1,2,3,4.' portopen
echo "  ports:" >> K8.yaml
for i in $(seq $portopen)
do

read -t 60 -p 'what protocol (TCP or UDP) do you want for this port ?' protocol
read -t 60 -p 'what is the host port number you want to open ?' porthost
read -t 60 -p 'what is the target (container) port number you want to open ?' containerport
echo "    - protocol: ${protocol}
      port: ${porthost}
      targetPort: ${containerport}" >> K8.yaml
done
printf '\n%.0s' `seq 1 2`
cat K8.yaml
printf '\n%.0s' `seq 1 5`
echo -e "${red}This is your final Service yaml." ${clear}
fi


# If Pod then add dependencies
if [ ${kind} = Pod ]; then
echo "spec:
  containers:" >> K8.yaml
read -t 60 -p 'what image do you want to use ?' image
read -t 60 -p 'what port do you want to use?' containerport2
echo "  - name: ${name}-${image}
    image: ${image}
    ports:
    - containerPort: ${containerport2}" >> K8.yaml
printf '\n%.0s' `seq 1 2`
cat K8.yaml
printf '\n%.0s' `seq 1 5`
echo -e "${red}This is your final Pod yaml." ${clear}
fi



# If deployment then add dependencies
if [ ${kind} = Deployment ]; then
echo "spec:" >> K8.yaml
read -t 60 -p 'how many replicas do you want ?' replicas
echo "  replicas: ${replicas}
  template:
    spec:
      containers:" >> K8.yaml
read -t 60 -p 'How many containers do you want ? ex. 1,2,3,4.' containersdep
for i in $(seq $containersdep)
do
read -t 60 -p 'what image do you want to use ?' image2
read -t 60 -p 'what port do you want to use?' containerport3
echo "      - name: ${name}-${image2}
        image: ${image2}
        ports:
        - containerPort: ${containerport3}" >> K8.yaml
done
printf '\n%.0s' `seq 1 2`
cat K8.yaml
printf '\n%.0s' `seq 1 5`
echo -e "${red}This is your final Deployment yaml." ${clear}
fi



exit
