#!/bin/bash

# Author: Jacob M
# Last edited on: 1/27/2024

# script used to pull from a file and ping each host, then test ssh/command in quotes and echo back if failure happens

# If parameters dont have 1 then quit.
if [[ $# -ne 1 ]]
    then
    echo "$0 needs a parameter of hosts to ssh to. Please provide a txt document."
    exit 1
fi

# wipe file or create if not there
echo -n "" > pinggood.txt
echo -n "" > sshgood.txt
echo -n "" > failed.txt

# remove file in /tmp/ and throw output in bin, file is used to stop runaway script
rm -f /tmp/stopit 2>/dev/null

# maps the file to 'hosts' variable
mapfile -t hosts < $1
# for every line in variable
for line in ${hosts[@]}

do

# send ping to /dev/null and send output to where input goes
if ping -c 2 -W2 $line &> /dev/null            #2>&1
    then
# echo line in ping.txt without displaying to screen
    echo "$line" >> 'ping.txt'
# command execution, ssh options follow by execute the command at this location, throw the errors in /dev/null and throw into a file and screen (CLI)
    ssh -o NumberOfPasswordPrompts=0 -o PasswordAuthentication=no -o StrictHostKeyChecking=no -o CheckHostIP=no -o ConnectionTimeout=20 ServerAliveInterval=35 -t $line "usr/bin/uname -nr" 2>/dev/null | tee -a sshgood.txt
# previous line doesnt equal 0 (success) then
    if [ $? != 0 ]
        then
# ssh fails then echo line to CLI and throw in failed.txt
        echo "$line failed ssh" | tee -a 'failed.txt'
    fi
    else
    echo "$line timeout" | tee -a 'failed.txt'

fi

# if script is runaway do 'touch /tmp/stopit' to stop script
[ -f /tmp/stopit ] && break 
done
